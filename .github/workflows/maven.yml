# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package



  owasp-dependency-check:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build project with Maven
        run: mvn clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'java-app'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          #args: >
           # --failOnCVSS 7
           # --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # build-and-push-docker-image:
  #   runs-on: ubuntu-latest

  #   steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #    - name: Build Docker image
  #      run:  docker buildx build -t java-web-app:latest .
    
  #    - uses: actions/checkout@v4
  #    - name: Tag the Docker image
  #      run:  docker tag java-web-app:latest davidayo97/java-app:${GITHUB_SHA}
       
  #    - name: Log in to Docker Hub
  #      uses: docker/login-action@v2
  #      with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
          
  #    - name: Push Docker image
  #      run: docker push davidayo97/java-app:${GITHUB_SHA}

  # ssh-ec2:
  #   needs: build-and-push-docker-image
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Set up SSH
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
          
  #     - name: Add EC2 host to known hosts
  #       run: |
  #         ssh-keyscan -H 54.165.147.144 >> ~/.ssh/known_hosts

  #     - name: SSH into EC2
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ubuntu@54.165.147.144 "echo 'Successfully logged in!'"
          
  #     - name: Pull Docker Image on EC2
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ubuntu@54.165.147.144 "docker pull davidayo97/java-app:${GITHUB_SHA}"

